{
 "Resources": {
  "AppBucket20FEBF1C": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "PUT",
        "GET"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "GenAiStack/AppBucket/Resource"
   }
  },
  "ImagesTable39278AD9": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "pk",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "pk",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "GenAiStack/ImagesTable/Resource"
   }
  },
  "UploadQueueA4421744": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GenAiStack/UploadQueue/Resource"
   }
  },
  "AnalyzeQueue65550A47": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GenAiStack/AnalyzeQueue/Resource"
   }
  },
  "ApiLambdaServiceRole1CC7D0F3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/ApiLambda/ServiceRole/Resource"
   }
  },
  "ApiLambdaServiceRoleDefaultPolicyF1B57697": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UploadQueueA4421744",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AnalyzeQueue65550A47",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApiLambdaServiceRoleDefaultPolicyF1B57697",
    "Roles": [
     {
      "Ref": "ApiLambdaServiceRole1CC7D0F3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/ApiLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ApiLambda91D2282D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0003798de2411fa4e1463c7b16464cf36a433a0bad2b935155d70a3e7ab0f769.zip"
    },
    "Environment": {
     "Variables": {
      "APP_BUCKET": {
       "Ref": "AppBucket20FEBF1C"
      },
      "APP_TABLE": {
       "Ref": "ImagesTable39278AD9"
      },
      "UPLOAD_QUEUE_URL": {
       "Ref": "UploadQueueA4421744"
      },
      "ANALYZE_QUEUE_URL": {
       "Ref": "AnalyzeQueue65550A47"
      }
     }
    },
    "Handler": "micro_services.api.handler.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "ApiLambdaServiceRole1CC7D0F3",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "ApiLambdaServiceRoleDefaultPolicyF1B57697",
    "ApiLambdaServiceRole1CC7D0F3"
   ],
   "Metadata": {
    "aws:cdk:path": "GenAiStack/ApiLambda/Resource",
    "aws:asset:path": "asset.0003798de2411fa4e1463c7b16464cf36a433a0bad2b935155d70a3e7ab0f769",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "UploadWorkerServiceRole5889E3A9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/UploadWorker/ServiceRole/Resource"
   }
  },
  "UploadWorkerServiceRoleDefaultPolicy7D8760CC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UploadQueueA4421744",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AppBucket20FEBF1C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AppBucket20FEBF1C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ImagesTable39278AD9",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UploadWorkerServiceRoleDefaultPolicy7D8760CC",
    "Roles": [
     {
      "Ref": "UploadWorkerServiceRole5889E3A9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/UploadWorker/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UploadWorker506E1ACC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0003798de2411fa4e1463c7b16464cf36a433a0bad2b935155d70a3e7ab0f769.zip"
    },
    "Environment": {
     "Variables": {
      "APP_BUCKET": {
       "Ref": "AppBucket20FEBF1C"
      },
      "APP_TABLE": {
       "Ref": "ImagesTable39278AD9"
      },
      "UPLOAD_QUEUE_URL": {
       "Ref": "UploadQueueA4421744"
      },
      "ANALYZE_QUEUE_URL": {
       "Ref": "AnalyzeQueue65550A47"
      }
     }
    },
    "Handler": "micro_services.upload_worker.lambda_handler.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "UploadWorkerServiceRole5889E3A9",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 60
   },
   "DependsOn": [
    "UploadWorkerServiceRoleDefaultPolicy7D8760CC",
    "UploadWorkerServiceRole5889E3A9"
   ],
   "Metadata": {
    "aws:cdk:path": "GenAiStack/UploadWorker/Resource",
    "aws:asset:path": "asset.0003798de2411fa4e1463c7b16464cf36a433a0bad2b935155d70a3e7ab0f769",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "UploadWorkerSqsEventSourceGenAiStackUploadQueueD4E2FB73BB95A53A": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "EventSourceArn": {
     "Fn::GetAtt": [
      "UploadQueueA4421744",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "UploadWorker506E1ACC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/UploadWorker/SqsEventSource:GenAiStackUploadQueueD4E2FB73/Resource"
   }
  },
  "AnalyzeWorkerServiceRole03372CA8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/AnalyzeWorker/ServiceRole/Resource"
   }
  },
  "AnalyzeWorkerServiceRoleDefaultPolicyD7556C71": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AnalyzeQueue65550A47",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AppBucket20FEBF1C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AppBucket20FEBF1C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ImagesTable39278AD9",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AnalyzeWorkerServiceRoleDefaultPolicyD7556C71",
    "Roles": [
     {
      "Ref": "AnalyzeWorkerServiceRole03372CA8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/AnalyzeWorker/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AnalyzeWorkerA6EA9824": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0003798de2411fa4e1463c7b16464cf36a433a0bad2b935155d70a3e7ab0f769.zip"
    },
    "Environment": {
     "Variables": {
      "APP_BUCKET": {
       "Ref": "AppBucket20FEBF1C"
      },
      "APP_TABLE": {
       "Ref": "ImagesTable39278AD9"
      },
      "UPLOAD_QUEUE_URL": {
       "Ref": "UploadQueueA4421744"
      },
      "ANALYZE_QUEUE_URL": {
       "Ref": "AnalyzeQueue65550A47"
      }
     }
    },
    "Handler": "micro_services.analyze_worker.lambda_handler.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "AnalyzeWorkerServiceRole03372CA8",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 60
   },
   "DependsOn": [
    "AnalyzeWorkerServiceRoleDefaultPolicyD7556C71",
    "AnalyzeWorkerServiceRole03372CA8"
   ],
   "Metadata": {
    "aws:cdk:path": "GenAiStack/AnalyzeWorker/Resource",
    "aws:asset:path": "asset.0003798de2411fa4e1463c7b16464cf36a433a0bad2b935155d70a3e7ab0f769",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AnalyzeWorkerSqsEventSourceGenAiStackAnalyzeQueueE33791955ACCF07F": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "EventSourceArn": {
     "Fn::GetAtt": [
      "AnalyzeQueue65550A47",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "AnalyzeWorkerA6EA9824"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/AnalyzeWorker/SqsEventSource:GenAiStackAnalyzeQueueE3379195/Resource"
   }
  },
  "HttpApiF5A9A8A7": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "HttpApi",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/HttpApi/Resource"
   }
  },
  "HttpApiDefaultStage3EEB07D6": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/HttpApi/DefaultStage/Resource"
   }
  },
  "HttpApiANYproxyApiIntegration8E99356C": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ApiLambda91D2282D",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/HttpApi/ANY--{proxy+}/ApiIntegration/Resource"
   }
  },
  "HttpApiANYproxyApiIntegrationPermissionCB2DDF98": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ApiLambda91D2282D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*/{proxy+}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/HttpApi/ANY--{proxy+}/ApiIntegration-Permission"
   }
  },
  "HttpApiANYproxy435A1FB9": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "ANY /{proxy+}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiANYproxyApiIntegration8E99356C"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/HttpApi/ANY--{proxy+}/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22QwU7DMBBEv6V3ZxvSH6CtQHBAlJR7tUnc1DSxTXbdKrL878h2uCBO82Y1Ws1uBdVDCb5c4Z2KtrsWg2rAHxnbq8A7nTxtwO9ce5Us9me9UJYdkgyimzWOpmvAf2IzyJhKEAR9E/gPJ10aJghC4Qi+NjmY9GAG1c7RZgqCNickkkywjSIGHJsOwe/P+tnplpXR4ukmNR+Nm1r5htYq3ccN/08PchoVkTI6CLSqR5Z3nG8V+Bdmu7UqhqJEe2TsU7kMcVQbx5leNct+wtRgf9Z/bMqFIGpJqYJI9eOepci7Y+s4iLLAwV4QytXj8vd11HxnYWe+GL1EDsn8nh1E9usNPFRQrr5IqWJymtUooc76A2AgQUzTAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "GenAiStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ApiBaseUrl": {
   "Value": {
    "Fn::GetAtt": [
     "HttpApiF5A9A8A7",
     "ApiEndpoint"
    ]
   }
  },
  "BucketName": {
   "Value": {
    "Ref": "AppBucket20FEBF1C"
   }
  },
  "TableName": {
   "Value": {
    "Ref": "ImagesTable39278AD9"
   }
  },
  "UploadQueueUrl": {
   "Value": {
    "Ref": "UploadQueueA4421744"
   }
  },
  "AnalyzeQueueUrl": {
   "Value": {
    "Ref": "AnalyzeQueue65550A47"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}